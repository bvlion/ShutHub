name: build

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'


jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5

      - name: set version
        run: ruby create-version.rb "${{ secrets.VERSION_CODES_URL }}" "${{ secrets.ADMOB_KEY }}" "${{ secrets.ADMOB_BANNER_KEY }}"

      - name: Error Check
        run: |
          if [ -f exit_message ]; then
            echo `cat exit_message`
            exit 1
          fi

      - name: decrypt files
        run: |
          echo ${{ secrets.GOOGLE_SERVICE_JSON }} | base64 -d > app/src/release/google-services.json
          echo ${{ secrets.PLAY_SERVICE_JSON }} | base64 -d > google-play-service.json
          echo ${{ secrets.SIGNING_GRADLE }} | base64 -d > dependencies/signing.gradle

      - uses: actions/upload-artifact@master
        with:
          name: setuped
          path: .

  deploy_gate:
    runs-on: ubuntu-latest
    needs: setup
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@master
        with:
          name: setuped
          path: .

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Unit Test And Build
        run: bash gradlew clean testReleaseUnitTest :app:bundleRelease

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test Report
        uses: JamesIves/github-pages-deploy-action@4.0.0
        with:
          branch: gh-pages
          folder: app/build/reports/tests/testReleaseUnitTest

      - name: DeployGate Upload
        run: |
          curl \
            -F "token=${{ secrets.DEPLOYGATE_TOKEN }}" \
            -F "file=@app/build/outputs/bundle/release/app-release.aab" \
            -F "message=`git log -1`" \
            https://deploygate.com/api/users/bvlion/apps

  release:
    runs-on: ubuntu-latest
    needs: setup
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@master
        with:
          name: setuped
          path: .

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: release build
        run: bash gradlew :app:bundleRelease

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5

      - name: Cache Bundle packages
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundle-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundle-

      - name: bundler install
        run: gem install bundler

      - name: bundler
        run: bundle install

      - name: up play store
        run: bundle exec fastlane play_store

  delete-artifact:
    runs-on: ubuntu-latest
    needs: [deploy_gate, release]
    if: always()
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: setuped

  slack:
    runs-on: ubuntu-latest
    needs: [deploy_gate, release]
    if: always()
    steps:
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,action,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
